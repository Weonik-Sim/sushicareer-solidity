/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "userName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "employeeZanToken",
        type: "uint256",
      },
    ],
    name: "RegisterEmployee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_companyName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_companyUrl",
        type: "string",
      },
    ],
    name: "_createEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllThings",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "employeeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "employeeName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "employeeZanToken",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "companyName",
            type: "string",
          },
          {
            internalType: "string",
            name: "companyUrl",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "employeeSendToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeReceiveToken",
            type: "uint256",
          },
        ],
        internalType: "struct Token.Employee[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
    ],
    name: "_getEmployeeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "employeeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "employeeName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "employeeZanToken",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "companyName",
            type: "string",
          },
          {
            internalType: "string",
            name: "companyUrl",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "employeeSendToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "employeeReceiveToken",
            type: "uint256",
          },
        ],
        internalType: "struct Token.Employee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sushi",
        type: "uint256",
      },
    ],
    name: "_sendSushi",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "employeeAddressId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "employeeExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "employeeIdAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "employees",
    outputs: [
      {
        internalType: "address",
        name: "employeeAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "employeeName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "employeeZanToken",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "companyName",
        type: "string",
      },
      {
        internalType: "string",
        name: "companyUrl",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "employeeSendToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "employeeReceiveToken",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060400160405280601281526020017f53757368692043617265657220546f6b656e0000000000000000000000000000815250600090816200004a919062000320565b506040518060400160405280600381526020017f53534800000000000000000000000000000000000000000000000000000000008152506001908162000091919062000320565b503480156200009f57600080fd5b5062000407565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012857607f821691505b6020821081036200013e576200013d620000e0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000169565b620001b4868362000169565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000201620001fb620001f584620001cc565b620001d6565b620001cc565b9050919050565b6000819050919050565b6200021d83620001e0565b620002356200022c8262000208565b84845462000176565b825550505050565b600090565b6200024c6200023d565b6200025981848462000212565b505050565b5b8181101562000281576200027560008262000242565b6001810190506200025f565b5050565b601f821115620002d0576200029a8162000144565b620002a58462000159565b81016020851015620002b5578190505b620002cd620002c48562000159565b8301826200025e565b50505b505050565b600082821c905092915050565b6000620002f560001984600802620002d5565b1980831691505092915050565b6000620003108383620002e2565b9150826002028217905092915050565b6200032b82620000a6565b67ffffffffffffffff811115620003475762000346620000b1565b5b6200035382546200010f565b6200036082828562000285565b600060209050601f83116001811462000398576000841562000383578287015190505b6200038f858262000302565b865550620003ff565b601f198416620003a88662000144565b60005b82811015620003d257848901518255600182019150602085019450602081019050620003ab565b86831015620003f25784890151620003ee601f891682620002e2565b8355505b6001600288020188555050505b505050505050565b61220480620004176000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80635583244811610066578063558324481461018757806395d89b41146101a3578063db0e5a36146101c1578063e49de613146101dd578063e9d327711461020d5761009e565b806305670237146100a357806306fdde03146100d35780633429c286146100f15780634739326b146101215780634c2ba44514610157575b600080fd5b6100bd60048036038101906100b891906113b8565b61022b565b6040516100ca919061156f565b60405180910390f35b6100db6105f2565b6040516100e891906115db565b60405180910390f35b61010b600480360381019061010691906113b8565b610680565b604051610118919061160c565b60405180910390f35b61013b600480360381019061013691906113b8565b6106b3565b60405161014e9796959493929190611636565b60405180910390f35b610171600480360381019061016c91906116e6565b6108bd565b60405161017e919061172e565b60405180910390f35b6101a1600480360381019061019c919061187e565b6108dd565b005b6101ab610bfb565b6040516101b891906115db565b60405180910390f35b6101db60048036038101906101d69190611925565b610c89565b005b6101f760048036038101906101f291906116e6565b61107a565b6040516102049190611978565b60405180910390f35b610215611092565b6040516102229190611aff565b60405180910390f35b61023361131b565b60011515600460006005600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514336040516020016102cb9190611bc0565b6040516020818303038152906040529061031b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031291906115db565b60405180910390fd5b506000600360006005600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600281815481106103a7576103a6611be6565b5b90600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461042690611c44565b80601f016020809104026020016040519081016040528092919081815260200182805461045290611c44565b801561049f5780601f106104745761010080835404028352916020019161049f565b820191906000526020600020905b81548152906001019060200180831161048257829003601f168201915b50505050508152602001600282015481526020016003820180546104c290611c44565b80601f01602080910402602001604051908101604052809291908181526020018280546104ee90611c44565b801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b5050505050815260200160048201805461055490611c44565b80601f016020809104026020016040519081016040528092919081815260200182805461058090611c44565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b5050505050815260200160058201548152602001600682015481525050915050919050565b600080546105ff90611c44565b80601f016020809104026020016040519081016040528092919081815260200182805461062b90611c44565b80156106785780601f1061064d57610100808354040283529160200191610678565b820191906000526020600020905b81548152906001019060200180831161065b57829003601f168201915b505050505081565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600281815481106106c357600080fd5b90600052602060002090600702016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461070c90611c44565b80601f016020809104026020016040519081016040528092919081815260200182805461073890611c44565b80156107855780601f1061075a57610100808354040283529160200191610785565b820191906000526020600020905b81548152906001019060200180831161076857829003601f168201915b5050505050908060020154908060030180546107a090611c44565b80601f01602080910402602001604051908101604052809291908181526020018280546107cc90611c44565b80156108195780601f106107ee57610100808354040283529160200191610819565b820191906000526020600020905b8154815290600101906020018083116107fc57829003601f168201915b50505050509080600401805461082e90611c44565b80601f016020809104026020016040519081016040528092919081815260200182805461085a90611c44565b80156108a75780601f1061087c576101008083540402835291602001916108a7565b820191906000526020600020905b81548152906001019060200180831161088a57829003601f168201915b5050505050908060050154908060060154905087565b60046020528060005260406000206000915054906101000a900460ff1681565b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096790611cc1565b60405180910390fd5b60026040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020016103e88152602001848152602001838152602001600081526020016000815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610a449190611e8d565b50604082015181600201556060820151816003019081610a649190611e8d565b506080820151816004019081610a7a9190611e8d565b5060a0820151816005015560c08201518160060155505060006001600280549050610aa59190611f8e565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f311ee1f77e30b0d849e267abf3b4ee64b1b9773cd397d97b9241e00fa90f66cc818560028481548110610bcc57610bcb611be6565b5b906000526020600020906007020160020154604051610bed93929190611fc2565b60405180910390a150505050565b60018054610c0890611c44565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3490611c44565b8015610c815780601f10610c5657610100808354040283529160200191610c81565b820191906000526020600020905b815481529060010190602001808311610c6457829003601f168201915b505050505081565b60011515600460006005600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610d4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d469061204c565b60405180910390fd5b60011515600460006005600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610e15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0c9061204c565b60405180910390fd5b8060028481548110610e2a57610e29611be6565b5b9060005260206000209060070201600201541015610e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e74906120b8565b60405180910390fd5b8060028481548110610e9257610e91611be6565b5b90600052602060002090600702016002016000828254610eb29190611f8e565b925050819055508060028481548110610ece57610ecd611be6565b5b90600052602060002090600702016005016000828254610eee91906120d8565b925050819055508060028381548110610f0a57610f09611be6565b5b90600052602060002090600702016002016000828254610f2a91906120d8565b925050819055508060028381548110610f4657610f45611be6565b5b90600052602060002090600702016006016000828254610f6691906120d8565b925050819055507f311ee1f77e30b0d849e267abf3b4ee64b1b9773cd397d97b9241e00fa90f66cc8360028581548110610fa357610fa2611be6565b5b906000526020600020906007020160010160028681548110610fc857610fc7611be6565b5b906000526020600020906007020160020154604051610fe993929190612190565b60405180910390a17f311ee1f77e30b0d849e267abf3b4ee64b1b9773cd397d97b9241e00fa90f66cc826002848154811061102757611026611be6565b5b90600052602060002090600702016001016002858154811061104c5761104b611be6565b5b90600052602060002090600702016002015460405161106d93929190612190565b60405180910390a1505050565b60036020528060005260406000206000915090505481565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561131257838290600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461113f90611c44565b80601f016020809104026020016040519081016040528092919081815260200182805461116b90611c44565b80156111b85780601f1061118d576101008083540402835291602001916111b8565b820191906000526020600020905b81548152906001019060200180831161119b57829003601f168201915b50505050508152602001600282015481526020016003820180546111db90611c44565b80601f016020809104026020016040519081016040528092919081815260200182805461120790611c44565b80156112545780601f1061122957610100808354040283529160200191611254565b820191906000526020600020905b81548152906001019060200180831161123757829003601f168201915b5050505050815260200160048201805461126d90611c44565b80601f016020809104026020016040519081016040528092919081815260200182805461129990611c44565b80156112e65780601f106112bb576101008083540402835291602001916112e6565b820191906000526020600020905b8154815290600101906020018083116112c957829003601f168201915b5050505050815260200160058201548152602001600682015481525050815260200190600101906110b6565b50505050905090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001606081526020016060815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61139581611382565b81146113a057600080fd5b50565b6000813590506113b28161138c565b92915050565b6000602082840312156113ce576113cd611378565b5b60006113dc848285016113a3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611410826113e5565b9050919050565b61142081611405565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611460578082015181840152602081019050611445565b60008484015250505050565b6000601f19601f8301169050919050565b600061148882611426565b6114928185611431565b93506114a2818560208601611442565b6114ab8161146c565b840191505092915050565b6114bf81611382565b82525050565b600060e0830160008301516114dd6000860182611417565b50602083015184820360208601526114f5828261147d565b915050604083015161150a60408601826114b6565b5060608301518482036060860152611522828261147d565b9150506080830151848203608086015261153c828261147d565b91505060a083015161155160a08601826114b6565b5060c083015161156460c08601826114b6565b508091505092915050565b6000602082019050818103600083015261158981846114c5565b905092915050565b600082825260208201905092915050565b60006115ad82611426565b6115b78185611591565b93506115c7818560208601611442565b6115d08161146c565b840191505092915050565b600060208201905081810360008301526115f581846115a2565b905092915050565b61160681611405565b82525050565b600060208201905061162160008301846115fd565b92915050565b61163081611382565b82525050565b600060e08201905061164b600083018a6115fd565b818103602083015261165d81896115a2565b905061166c6040830188611627565b818103606083015261167e81876115a2565b9050818103608083015261169281866115a2565b90506116a160a0830185611627565b6116ae60c0830184611627565b98975050505050505050565b6116c381611405565b81146116ce57600080fd5b50565b6000813590506116e0816116ba565b92915050565b6000602082840312156116fc576116fb611378565b5b600061170a848285016116d1565b91505092915050565b60008115159050919050565b61172881611713565b82525050565b6000602082019050611743600083018461171f565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61178b8261146c565b810181811067ffffffffffffffff821117156117aa576117a9611753565b5b80604052505050565b60006117bd61136e565b90506117c98282611782565b919050565b600067ffffffffffffffff8211156117e9576117e8611753565b5b6117f28261146c565b9050602081019050919050565b82818337600083830152505050565b600061182161181c846117ce565b6117b3565b90508281526020810184848401111561183d5761183c61174e565b5b6118488482856117ff565b509392505050565b600082601f83011261186557611864611749565b5b813561187584826020860161180e565b91505092915050565b60008060006060848603121561189757611896611378565b5b600084013567ffffffffffffffff8111156118b5576118b461137d565b5b6118c186828701611850565b935050602084013567ffffffffffffffff8111156118e2576118e161137d565b5b6118ee86828701611850565b925050604084013567ffffffffffffffff81111561190f5761190e61137d565b5b61191b86828701611850565b9150509250925092565b60008060006060848603121561193e5761193d611378565b5b600061194c868287016113a3565b935050602061195d868287016113a3565b925050604061196e868287016113a3565b9150509250925092565b600060208201905061198d6000830184611627565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060e0830160008301516119d76000860182611417565b50602083015184820360208601526119ef828261147d565b9150506040830151611a0460408601826114b6565b5060608301518482036060860152611a1c828261147d565b91505060808301518482036080860152611a36828261147d565b91505060a0830151611a4b60a08601826114b6565b5060c0830151611a5e60c08601826114b6565b508091505092915050565b6000611a7583836119bf565b905092915050565b6000602082019050919050565b6000611a9582611993565b611a9f818561199e565b935083602082028501611ab1856119af565b8060005b85811015611aed5784840389528151611ace8582611a69565b9450611ad983611a7d565b925060208a01995050600181019050611ab5565b50829750879550505050505092915050565b60006020820190508181036000830152611b198184611a8a565b905092915050565b600081905092915050565b7f456d706c6f796565206e6f74206578697374733a200000000000000000000000600082015250565b6000611b62601583611b21565b9150611b6d82611b2c565b601582019050919050565b60008160601b9050919050565b6000611b9082611b78565b9050919050565b6000611ba282611b85565b9050919050565b611bba611bb582611405565b611b97565b82525050565b6000611bcb82611b55565b9150611bd78284611ba9565b60148201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c5c57607f821691505b602082108103611c6f57611c6e611c15565b5b50919050565b7f456d706c6f79656520616c726561647920657869737473000000000000000000600082015250565b6000611cab601783611591565b9150611cb682611c75565b602082019050919050565b60006020820190508181036000830152611cda81611c9e565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d06565b611d4d8683611d06565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d8a611d85611d8084611382565b611d65565b611382565b9050919050565b6000819050919050565b611da483611d6f565b611db8611db082611d91565b848454611d13565b825550505050565b600090565b611dcd611dc0565b611dd8818484611d9b565b505050565b5b81811015611dfc57611df1600082611dc5565b600181019050611dde565b5050565b601f821115611e4157611e1281611ce1565b611e1b84611cf6565b81016020851015611e2a578190505b611e3e611e3685611cf6565b830182611ddd565b50505b505050565b600082821c905092915050565b6000611e6460001984600802611e46565b1980831691505092915050565b6000611e7d8383611e53565b9150826002028217905092915050565b611e9682611426565b67ffffffffffffffff811115611eaf57611eae611753565b5b611eb98254611c44565b611ec4828285611e00565b600060209050601f831160018114611ef75760008415611ee5578287015190505b611eef8582611e71565b865550611f57565b601f198416611f0586611ce1565b60005b82811015611f2d57848901518255600182019150602085019450602081019050611f08565b86831015611f4a5784890151611f46601f891682611e53565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f9982611382565b9150611fa483611382565b9250828203905081811115611fbc57611fbb611f5f565b5b92915050565b6000606082019050611fd76000830186611627565b8181036020830152611fe981856115a2565b9050611ff86040830184611627565b949350505050565b7f456d706c6f796565206e6f742065786973747300000000000000000000000000600082015250565b6000612036601383611591565b915061204182612000565b602082019050919050565b6000602082019050818103600083015261206581612029565b9050919050565b7f4e6f7420656e6f75676820737573686900000000000000000000000000000000600082015250565b60006120a2601083611591565b91506120ad8261206c565b602082019050919050565b600060208201905081810360008301526120d181612095565b9050919050565b60006120e382611382565b91506120ee83611382565b925082820190508082111561210657612105611f5f565b5b92915050565b6000815461211981611c44565b6121238186611591565b9450600182166000811461213e576001811461215457612187565b60ff198316865281151560200286019350612187565b61215d85611ce1565b60005b8381101561217f57815481890152600182019150602081019050612160565b808801955050505b50505092915050565b60006060820190506121a56000830186611627565b81810360208301526121b7818561210c565b90506121c66040830184611627565b94935050505056fea264697066735822122028f23160fb4a3981a6d6b4af0882f46265b59f4a3e344a7adc116111928f874064736f6c63430008110033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
